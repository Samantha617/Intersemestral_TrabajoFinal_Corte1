/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ventana;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Cita;
import modelo.Mascota;
import modelo.Propietario;
import modelo.Veterinario;

/**
 *
 * @author MI PC
 */
public class VentanaAgendamientoDeCita extends javax.swing.JFrame {

    /**
     * Creates new form VentanaMascota
     */
//---------------Constructor de la ventana-------------------------------
    public VentanaAgendamientoDeCita() {
        // Inicializa los componentes del formulario
        initComponents();
        setTitle("Agendamiento de Citas");
        //ubicacion de la ventana
        setLocationRelativeTo(null);
        // Cierra solo esta ventana
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        limpiarCampos();
        llenarTabla();
        llenarComboVeterinarios();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAgendamientoCitas = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtFechaAgendamiento = new javax.swing.JTextField();
        txtMascota = new javax.swing.JTextField();
        txtHora = new javax.swing.JTextField();
        btnEliminar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtPropietario = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cbVeterinario = new javax.swing.JComboBox<>();
        btnRegresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "....................Agendamiento de Cita.........................", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Gabriola", 0, 36), new java.awt.Color(0, 0, 0))); // NOI18N

        jTabbedPane1.setBackground(new java.awt.Color(102, 102, 255));
        jTabbedPane1.setForeground(new java.awt.Color(0, 0, 0));

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "..........................................................Citas Agendadas...........................................................................", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        tblAgendamientoCitas.setBackground(new java.awt.Color(153, 153, 255));
        tblAgendamientoCitas.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        tblAgendamientoCitas.setForeground(new java.awt.Color(0, 0, 0));
        tblAgendamientoCitas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Fecha ", "Hora", "Mascota", "Propietario", "Veterinario"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblAgendamientoCitas);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(135, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Tabla", jPanel1);

        jPanel3.setBackground(new java.awt.Color(204, 204, 255));
        jPanel3.setForeground(new java.awt.Color(153, 153, 255));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Fecha:");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Hora:");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Mascota:");

        txtFechaAgendamiento.setBackground(new java.awt.Color(102, 102, 255));
        txtFechaAgendamiento.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        txtFechaAgendamiento.setForeground(new java.awt.Color(0, 0, 0));
        txtFechaAgendamiento.setToolTipText("Ingresa nombre del propietario");

        txtMascota.setBackground(new java.awt.Color(102, 102, 255));
        txtMascota.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        txtMascota.setForeground(new java.awt.Color(0, 0, 0));

        txtHora.setBackground(new java.awt.Color(102, 102, 255));
        txtHora.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        txtHora.setForeground(new java.awt.Color(0, 0, 0));

        btnEliminar.setBackground(new java.awt.Color(102, 102, 255));
        btnEliminar.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnGuardar.setBackground(new java.awt.Color(102, 102, 255));
        btnGuardar.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnEditar.setBackground(new java.awt.Color(102, 102, 255));
        btnEditar.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnBuscar.setBackground(new java.awt.Color(102, 102, 255));
        btnBuscar.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Propietario:");

        txtPropietario.setBackground(new java.awt.Color(102, 102, 255));
        txtPropietario.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        txtPropietario.setForeground(new java.awt.Color(0, 0, 0));

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Veterinario:");

        cbVeterinario.setBackground(new java.awt.Color(102, 102, 255));
        cbVeterinario.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        cbVeterinario.setForeground(new java.awt.Color(0, 0, 0));
        cbVeterinario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 16, Short.MAX_VALUE)
                        .addComponent(btnBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEditar)
                        .addGap(36, 36, 36)
                        .addComponent(btnEliminar)
                        .addGap(18, 18, 18)
                        .addComponent(btnGuardar)
                        .addGap(27, 27, 27))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtFechaAgendamiento, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPropietario, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                            .addComponent(cbVeterinario, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtMascota, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFechaAgendamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMascota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPropietario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbVeterinario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscar)
                    .addComponent(btnEditar)
                    .addComponent(btnEliminar)
                    .addComponent(btnGuardar))
                .addGap(28, 28, 28))
        );

        jTabbedPane1.addTab("Agendar", jPanel3);

        btnRegresar.setBackground(new java.awt.Color(102, 102, 255));
        btnRegresar.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnRegresar.setText("Regresar ");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(btnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnRegresar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        Ventana1 v1 = new Ventana1();
        v1.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
         // Obtener los datos ingresados desde los campos de texto y combo box
    String fecha = txtFechaAgendamiento.getText();
    String hora = txtHora.getText();
    String nombreM = txtMascota.getText();
    String nombreP = txtPropietario.getText();
    String nombreV = (String) cbVeterinario.getSelectedItem();

    // Validar que todos los campos estén completos
    if (fecha.isEmpty() || hora.isEmpty() || nombreM.isEmpty()
            || nombreP.isEmpty() || nombreV == null || nombreV.equals("---")) {
        JOptionPane.showMessageDialog(this, "Por favor complete todos los campos");
        return;
    }

    // Buscar al propietario y a la mascota
    Propietario propietario = null;
    Mascota mascota = null;

    for (Propietario p : Propietario.listaPropietarios) {
        if (p.getNombreP().equalsIgnoreCase(nombreP)) {
            propietario = p;

            // Dentro del propietario, buscar la mascota
            for (Mascota m : p.getListaMascotas()) {
                if (m.getNombreM().equalsIgnoreCase(nombreM)) {
                    mascota = m;
                    break;
                }
            }
            break;
        }
    }

    // Validar que se haya encontrado el propietario y su mascota
    if (propietario == null || mascota == null) {
        JOptionPane.showMessageDialog(this, "Propietario o mascota no encontrados");
        return;
    }

    // Buscar el veterinario por nombre
    Veterinario veterinario = Veterinario.buscarVeterinario(nombreV);

    // Validar que el veterinario exista
    if (veterinario == null) {
        JOptionPane.showMessageDialog(this, "Veterinario no encontrado");
        return;
    }

    // Verificar si el veterinario está disponible
    if (!veterinario.isDisponible()) {
        JOptionPane.showMessageDialog(this, "El veterinario seleccionado no está disponible");
        return;
    }

    // Validar si ya hay una cita agendada para ese veterinario en la misma fecha y hora
    Cita citaExistente = Cita.buscarCita(fecha, hora);
    if (citaExistente != null && citaExistente.getVeterinario().getNombreV().equalsIgnoreCase(nombreV)) {
        JOptionPane.showMessageDialog(this, "Este veterinario ya tiene una cita agendada en esa fecha y hora");
        return;
    }

    // Crear la nueva cita
    Cita nuevaCita = new Cita(fecha, hora, mascota, propietario, veterinario);

    // Guardar la cita en la lista
    Cita.guardarCita(nuevaCita);

    // Mostrar mensaje de éxito
    JOptionPane.showMessageDialog(this, "Cita agendada con éxito");

    // Limpiar campos y actualizar la tabla
    limpiarCampos();
    llenarTabla();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        String fecha = txtFechaAgendamiento.getText();
        String hora = txtHora.getText();

        if (fecha.isEmpty() || hora.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor ingrese la fecha y hora de la cita a buscar");
            return;
        }

        Cita cita = Cita.buscarCita(fecha, hora);

        if (cita != null) {
            txtMascota.setText(cita.getMascota().getNombreM());
            txtPropietario.setText(cita.getPropietario().getNombreP());
            cbVeterinario.setSelectedItem(cita.getVeterinario().getNombreV());
            JOptionPane.showMessageDialog(this, "Cita encontrada");
        } else {
            JOptionPane.showMessageDialog(this, "No se encontro una cita con esa fecha y hora");
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        String fecha = txtFechaAgendamiento.getText();
        String hora = txtHora.getText();
        String nombreM = txtMascota.getText();
        String nombreP = txtPropietario.getText();
        String nombreV = (String) cbVeterinario.getSelectedItem();

        // Validar campos vacios
        if (fecha.isEmpty() || hora.isEmpty() || nombreM.isEmpty() || nombreP.isEmpty() || nombreV == null) {
            JOptionPane.showMessageDialog(this, "Por favor complete todos los campos");
            return;
        }

        // Buscar veterinario
        Veterinario veterinario = Veterinario.buscarVeterinario(nombreV);
        if (veterinario == null || !veterinario.isDisponible()) {
            JOptionPane.showMessageDialog(this, "Veterinario no disponible o no existe");
            return;
        }

        // Buscar propietario y mascota
        Propietario propietario = null;
        Mascota mascota = null;

        for (Propietario p : Propietario.listaPropietarios) {
            if (p.getNombreP().equalsIgnoreCase(nombreP)) {
                propietario = p;
                for (Mascota m : p.getListaMascotas()) {
                    if (m.getNombreM().equalsIgnoreCase(nombreM)) {
                        mascota = m;
                        break;
                    }
                }
                break;
            }
        }

        if (propietario == null || mascota == null) {
            JOptionPane.showMessageDialog(this, "Propietario o mascota no encontrados");
            return;
        }

        // Editar la cita
        boolean editado = Cita.editarCita(fecha, hora, mascota, propietario, veterinario);

        if (editado) {
            JOptionPane.showMessageDialog(this,"la cita fue editada");
            limpiarCampos();
            llenarTabla();
        } else {
            JOptionPane.showMessageDialog(this,"No se encontro cita con esa fecha");
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // Obtener los datos ingresados por el usuario
    String fecha = txtFechaAgendamiento.getText();
    String hora = txtHora.getText();

    // Validar que ambos campos estén llenos
    if (fecha.isEmpty() || hora.isEmpty()) {
        JOptionPane.showMessageDialog(this,"Por favor ingrese la fecha y hora de la cita a eliminar");
        return;
    }

    // Buscar la cita exacta por fecha y hora
    Cita cita = Cita.buscarCita(fecha, hora);

    // Verificar si se encontro la cita
    if (cita == null) {
        JOptionPane.showMessageDialog(this,"No se encontro una cita con esa fecha y hora");
        return;
    }

    // Confirmar con el usuario si realmente desea eliminar
    int opcion = JOptionPane.showConfirmDialog(this,
            "¿Estas seguro de eliminar la cita del dia " + fecha + " a las " + hora + "?",
            "Confirmar eliminación", JOptionPane.YES_NO_OPTION);

    // Si el usuario confirma entonces elimina la cita
    if (opcion == JOptionPane.YES_OPTION) {
        Cita.listaCitas.remove(cita); // Elimina la cita de la lista directamente

        JOptionPane.showMessageDialog(this,"La cita fue eliminada");

        //----Limpiar campos y actualizar la tabla--------
        limpiarCampos();
        llenarTabla();
    }
    }//GEN-LAST:event_btnEliminarActionPerformed

//-----------creo txtFechaAgendamientompos----------------------
    private void limpiarCampos() {
        txtFechaAgendamiento.setText("");
        txtHora.setText("");
        txtMascota.setText("");
        txtPropietario.setText("");
        cbVeterinario.setSelectedIndex(0);

    }
//------------creo metodo de llenar tabla------------------------

    private void llenarTabla() {

        DefaultTableModel modelo = (DefaultTableModel) tblAgendamientoCitas.getModel();
        modelo.setRowCount(0); // Limpia la tabla primero

        for (Cita c : Cita.listaCitas) {
            modelo.addRow(new Object[]{
                c.getFecha(),
                c.getHora(),
                c.getMascota().getNombreM(),
                c.getPropietario().getNombreP(),
                c.getVeterinario().getNombreV()
            });
        }
    }

    private void llenarComboVeterinarios() {
        cbVeterinario.removeAllItems(); //Limpia el combo
        cbVeterinario.addItem("---");   //Opcion inicial
        for (Veterinario v : Veterinario.listaVeterinarios) {
            if (v.isDisponible()) {
                cbVeterinario.addItem(v.getNombreV());
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaAgendamientoDeCita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaAgendamientoDeCita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaAgendamientoDeCita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaAgendamientoDeCita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaAgendamientoDeCita().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JComboBox<String> cbVeterinario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tblAgendamientoCitas;
    private javax.swing.JTextField txtFechaAgendamiento;
    private javax.swing.JTextField txtHora;
    private javax.swing.JTextField txtMascota;
    private javax.swing.JTextField txtPropietario;
    // End of variables declaration//GEN-END:variables
}
